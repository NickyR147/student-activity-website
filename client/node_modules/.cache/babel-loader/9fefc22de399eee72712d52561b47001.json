{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maram\\\\GitHub\\\\student-activity-website\\\\client\\\\src\\\\ResetPasswordForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ResetPasswordForm = _ref => {\n  _s();\n\n  let {\n    token\n  } = _ref;\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match');\n      return;\n    }\n\n    try {\n      const response = await axios.post('/resetpassword', {\n        token,\n        password\n      });\n      setMessage(response.data);\n    } catch (error) {\n      console.error(error);\n      setMessage('Error resetting password');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"New Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Confirm Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ResetPasswordForm, \"qt3PhytPuw5RELHGgvSOEvZef4A=\");\n\n_c = ResetPasswordForm;\nexport default ResetPasswordForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPasswordForm\");","map":{"version":3,"sources":["C:/Users/maram/GitHub/student-activity-website/client/src/ResetPasswordForm.js"],"names":["React","useState","axios","ResetPasswordForm","token","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","handleSubmit","e","preventDefault","response","post","data","error","console","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,iBAAiB,GAAG,QAAe;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACvC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMU,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIR,QAAQ,KAAKE,eAAjB,EAAkC;AAChCG,MAAAA,UAAU,CAAC,wBAAD,CAAV;AACA;AACD;;AACD,QAAI;AACF,YAAMI,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAN,CAAW,gBAAX,EAA6B;AAAEX,QAAAA,KAAF;AAASC,QAAAA;AAAT,OAA7B,CAAvB;AACAK,MAAAA,UAAU,CAACI,QAAQ,CAACE,IAAV,CAAV;AACD,KAHD,CAGE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACAP,MAAAA,UAAU,CAAC,0BAAD,CAAV;AACD;AACF,GAbD;;AAeA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEC,YAAhB;AAAA,8BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,KAAK,EAAEN,QAA9B;AAAwC,UAAA,QAAQ,EAAGO,CAAD,IAAON,WAAW,CAACM,CAAC,CAACO,MAAF,CAASC,KAAV,CAApE;AAAsF,UAAA,QAAQ;AAA9F;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,KAAK,EAAEb,eAA9B;AAA+C,UAAA,QAAQ,EAAGK,CAAD,IAAOJ,kBAAkB,CAACI,CAAC,CAACO,MAAF,CAASC,KAAV,CAAlF;AAAoG,UAAA,QAAQ;AAA5G;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eASE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAaGX,OAAO,iBAAI;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAbd;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CArCD;;GAAMN,iB;;KAAAA,iB;AAuCN,eAAeA,iBAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ResetPasswordForm = ({ token }) => {\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match');\r\n      return;\r\n    }\r\n    try {\r\n      const response = await axios.post('/resetpassword', { token, password });\r\n      setMessage(response.data);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setMessage('Error resetting password');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Reset Password</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>New Password:</label>\r\n          <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n        </div>\r\n        <div>\r\n          <label>Confirm Password:</label>\r\n          <input type=\"password\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} required />\r\n        </div>\r\n        <button type=\"submit\">Reset Password</button>\r\n      </form>\r\n      {message && <p>{message}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPasswordForm;\r\n"]},"metadata":{},"sourceType":"module"}