{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maram\\\\GitHub\\\\student-activity-website\\\\client\\\\src\\\\VoteForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { FormControl, InputLabel, Select, MenuItem, Button, makeStyles, Card, CardContent } from '@material-ui/core';\nimport Header from './Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  formContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    minHeight: '100vh' // Ensure the form is centered vertically on the page\n\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  card: {\n    margin: theme.spacing(2),\n    width: 300,\n    textAlign: 'center'\n  }\n}));\n\nconst VoteForm = () => {\n  _s();\n\n  const classes = useStyles();\n  const [candidate, setCandidate] = useState('');\n  const [votes, setVotes] = useState({\n    John: 0,\n    Mary: 0,\n    Susan: 0\n  });\n  const [hasVoted, setHasVoted] = useState(false);\n  useEffect(() => {\n    // Check if the user has already voted (you can implement your own logic here)\n    const hasVoted = localStorage.getItem('hasVoted');\n\n    if (hasVoted) {\n      setHasVoted(true);\n    }\n  }, []);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const response = await fetch('http://localhost:5000/vote', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          candidate\n        })\n      });\n      const data = await response.json();\n      console.log(data);\n      alert('Your vote has been registered successfully!');\n      setVotes(prevVotes => ({ ...prevVotes,\n        [candidate]: prevVotes[candidate] + 1\n      })); // Set local storage to indicate that the user has voted\n\n      localStorage.setItem('hasVoted', true);\n      setHasVoted(true);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"first\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.formContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Voting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), hasVoted ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You have already voted. Thank you!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          className: classes.formControl,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Vote for\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: candidate,\n            onChange: e => setCandidate(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              children: /*#__PURE__*/_jsxDEV(\"em\", {\n                children: \"Select candidate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"John\",\n              children: \"John\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Mary\",\n              children: \"Mary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Susan\",\n              children: \"Susan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.button,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VoteForm, \"3YEbsW0Tk6rgVI762uy1t9aBHGc=\", false, function () {\n  return [useStyles];\n});\n\n_c = VoteForm;\nexport default VoteForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"VoteForm\");","map":{"version":3,"sources":["C:/Users/maram/GitHub/student-activity-website/client/src/VoteForm.js"],"names":["React","useState","useEffect","FormControl","InputLabel","Select","MenuItem","Button","makeStyles","Card","CardContent","Header","useStyles","theme","formContainer","display","flexDirection","alignItems","justifyContent","minHeight","formControl","margin","spacing","minWidth","button","card","width","textAlign","VoteForm","classes","candidate","setCandidate","votes","setVotes","John","Mary","Susan","hasVoted","setHasVoted","localStorage","getItem","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","console","log","alert","prevVotes","setItem","error","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,MAAlC,EAA0CC,QAA1C,EAAoDC,MAApD,EAA4DC,UAA5D,EAAwEC,IAAxE,EAA8EC,WAA9E,QAAiG,mBAAjG;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAAEK,KAAD,KAAY;AACvCC,EAAAA,aAAa,EAAE;AACbC,IAAAA,OAAO,EAAE,MADI;AAEbC,IAAAA,aAAa,EAAE,QAFF;AAGbC,IAAAA,UAAU,EAAE,QAHC;AAIbC,IAAAA,cAAc,EAAE,QAJH;AAKbC,IAAAA,SAAS,EAAE,OALE,CAKO;;AALP,GADwB;AAQvCC,EAAAA,WAAW,EAAE;AACXC,IAAAA,MAAM,EAAER,KAAK,CAACS,OAAN,CAAc,CAAd,CADG;AAEXC,IAAAA,QAAQ,EAAE;AAFC,GAR0B;AAYvCC,EAAAA,MAAM,EAAE;AACNH,IAAAA,MAAM,EAAER,KAAK,CAACS,OAAN,CAAc,CAAd;AADF,GAZ+B;AAevCG,EAAAA,IAAI,EAAE;AACJJ,IAAAA,MAAM,EAAER,KAAK,CAACS,OAAN,CAAc,CAAd,CADJ;AAEJI,IAAAA,KAAK,EAAE,GAFH;AAGJC,IAAAA,SAAS,EAAE;AAHP;AAfiC,CAAZ,CAAD,CAA5B;;AAsBA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAMC,OAAO,GAAGjB,SAAS,EAAzB;AACA,QAAM,CAACkB,SAAD,EAAYC,YAAZ,IAA4B9B,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAC+B,KAAD,EAAQC,QAAR,IAAoBhC,QAAQ,CAAC;AACjCiC,IAAAA,IAAI,EAAE,CAD2B;AAEjCC,IAAAA,IAAI,EAAE,CAF2B;AAGjCC,IAAAA,KAAK,EAAE;AAH0B,GAAD,CAAlC;AAKA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BrC,QAAQ,CAAC,KAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMmC,QAAQ,GAAGE,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAjB;;AACA,QAAIH,QAAJ,EAAc;AACZC,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD;AACF,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMG,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAAD,EAA+B;AACzDC,QAAAA,MAAM,EAAE,MADiD;AAEzDC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFgD;AAKzDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEpB,UAAAA;AAAF,SAAf;AALmD,OAA/B,CAA5B;AAOA,YAAMqB,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAI,MAAAA,KAAK,CAAC,6CAAD,CAAL;AACAtB,MAAAA,QAAQ,CAAEuB,SAAD,KAAgB,EACvB,GAAGA,SADoB;AAEvB,SAAC1B,SAAD,GAAa0B,SAAS,CAAC1B,SAAD,CAAT,GAAuB;AAFb,OAAhB,CAAD,CAAR,CAXE,CAeF;;AACAS,MAAAA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiC,IAAjC;AACAnB,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAlBD,CAkBE,OAAOoB,KAAP,EAAc;AACdL,MAAAA,OAAO,CAACK,KAAR,CAAc,QAAd,EAAwBA,KAAxB;AACD;AACF,GAvBD;;AAyBA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAE7B,OAAO,CAACf,aAAxB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGuB,QAAQ,gBACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADO,gBAGP;AAAM,QAAA,QAAQ,EAAEI,YAAhB;AAAA,gCACE,QAAC,WAAD;AAAa,UAAA,SAAS,EAAEZ,OAAO,CAACT,WAAhC;AAAA,kCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAEU,SAAf;AAA0B,YAAA,QAAQ,EAAGY,CAAD,IAAOX,YAAY,CAACW,CAAC,CAACiB,MAAF,CAASC,KAAV,CAAvD;AAAA,oCACE,QAAC,QAAD;AAAU,cAAA,KAAK,EAAC,EAAhB;AAAA,qCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,QAAC,QAAD;AAAU,cAAA,KAAK,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE,QAAC,QAAD;AAAU,cAAA,KAAK,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,eAME,QAAC,QAAD;AAAU,cAAA,KAAK,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAYE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAC,WAA9B;AAA0C,UAAA,KAAK,EAAC,SAAhD;AAA0D,UAAA,SAAS,EAAE/B,OAAO,CAACL,MAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CAvED;;GAAMI,Q;UACYhB,S;;;KADZgB,Q;AAyEN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { FormControl, InputLabel, Select, MenuItem, Button, makeStyles, Card, CardContent } from '@material-ui/core';\r\nimport Header from './Header';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    minHeight: '100vh', // Ensure the form is centered vertically on the page\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  card: {\r\n    margin: theme.spacing(2),\r\n    width: 300,\r\n    textAlign: 'center',\r\n  },\r\n}));\r\n\r\nconst VoteForm = () => {\r\n  const classes = useStyles();\r\n  const [candidate, setCandidate] = useState('');\r\n  const [votes, setVotes] = useState({\r\n    John: 0,\r\n    Mary: 0,\r\n    Susan: 0,\r\n  });\r\n  const [hasVoted, setHasVoted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Check if the user has already voted (you can implement your own logic here)\r\n    const hasVoted = localStorage.getItem('hasVoted');\r\n    if (hasVoted) {\r\n      setHasVoted(true);\r\n    }\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch('http://localhost:5000/vote', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ candidate }),\r\n      });\r\n      const data = await response.json();\r\n      console.log(data);\r\n      alert('Your vote has been registered successfully!');\r\n      setVotes((prevVotes) => ({\r\n        ...prevVotes,\r\n        [candidate]: prevVotes[candidate] + 1,\r\n      }));\r\n      // Set local storage to indicate that the user has voted\r\n      localStorage.setItem('hasVoted', true);\r\n      setHasVoted(true);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"first\">\r\n      <Header />\r\n      <div className={classes.formContainer}>\r\n        <h2>Voting</h2>\r\n        {hasVoted ? (\r\n          <p>You have already voted. Thank you!</p>\r\n        ) : (\r\n          <form onSubmit={handleSubmit}>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel>Vote for</InputLabel>\r\n              <Select value={candidate} onChange={(e) => setCandidate(e.target.value)}>\r\n                <MenuItem value=\"\">\r\n                  <em>Select candidate</em>\r\n                </MenuItem>\r\n                <MenuItem value=\"John\">John</MenuItem>\r\n                <MenuItem value=\"Mary\">Mary</MenuItem>\r\n                <MenuItem value=\"Susan\">Susan</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" className={classes.button}>\r\n              Submit\r\n            </Button>\r\n          </form>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VoteForm;\r\n"]},"metadata":{},"sourceType":"module"}