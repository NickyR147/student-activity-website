{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maram\\\\GitHub\\\\student-activity-website\\\\client\\\\src\\\\VoteForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { FormControl, InputLabel, Select, MenuItem, Button, makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n\nconst VoteForm = () => {\n  _s();\n\n  const classes = useStyles();\n  const [candidate, setCandidate] = useState('');\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const response = await fetch('http://localhost:5000/vote', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          candidate\n        })\n      });\n      const data = await response.json();\n      console.log(data);\n      alert('Your vote has been registered successfully!');\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      className: classes.formControl,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        children: \"Vote for\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        value: candidate,\n        onChange: e => setCandidate(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"\",\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            children: \"Select candidate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"John\",\n          children: \"John\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Mary\",\n          children: \"Mary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Susan\",\n          children: \"Susan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.button,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VoteForm, \"0E3/oQH9sYGpNAkZNQzghyuM2WA=\", false, function () {\n  return [useStyles];\n});\n\n_c = VoteForm;\nexport default VoteForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"VoteForm\");","map":{"version":3,"sources":["C:/Users/maram/GitHub/student-activity-website/client/src/VoteForm.js"],"names":["React","useState","FormControl","InputLabel","Select","MenuItem","Button","makeStyles","useStyles","theme","formControl","margin","spacing","minWidth","button","VoteForm","classes","candidate","setCandidate","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","console","log","alert","error","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,MAAlC,EAA0CC,QAA1C,EAAoDC,MAApD,EAA4DC,UAA5D,QAA8E,mBAA9E;;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAEE,KAAD,KAAY;AACvCC,EAAAA,WAAW,EAAE;AACXC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADG;AAEXC,IAAAA,QAAQ,EAAE;AAFC,GAD0B;AAKvCC,EAAAA,MAAM,EAAE;AACNH,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADF;AAL+B,CAAZ,CAAD,CAA5B;;AAUA,MAAMG,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAMC,OAAO,GAAGR,SAAS,EAAzB;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMkB,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAAD,EAA+B;AACzDC,QAAAA,MAAM,EAAE,MADiD;AAEzDC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFgD;AAKzDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEX,UAAAA;AAAF,SAAf;AALmD,OAA/B,CAA5B;AAOA,YAAMY,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAI,MAAAA,KAAK,CAAC,6CAAD,CAAL;AACD,KAXD,CAWE,OAAOC,KAAP,EAAc;AACdH,MAAAA,OAAO,CAACG,KAAR,CAAc,QAAd,EAAwBA,KAAxB;AACD;AACF,GAhBD;;AAkBA,sBACE;AAAM,IAAA,QAAQ,EAAEf,YAAhB;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,SAAS,EAAEH,OAAO,CAACN,WAAhC;AAAA,8BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAEO,SAAf;AAA0B,QAAA,QAAQ,EAAGG,CAAD,IAAOF,YAAY,CAACE,CAAC,CAACe,MAAF,CAASC,KAAV,CAAvD;AAAA,gCACE,QAAC,QAAD;AAAU,UAAA,KAAK,EAAC,EAAhB;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,QAAD;AAAU,UAAA,KAAK,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE,QAAC,QAAD;AAAU,UAAA,KAAK,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAME,QAAC,QAAD;AAAU,UAAA,KAAK,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAYE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAC,WAA9B;AAA0C,MAAA,KAAK,EAAC,SAAhD;AAA0D,MAAA,SAAS,EAAEpB,OAAO,CAACF,MAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAxCD;;GAAMC,Q;UACYP,S;;;KADZO,Q;AA0CN,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { FormControl, InputLabel, Select, MenuItem, Button, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst VoteForm = () => {\r\n  const classes = useStyles();\r\n  const [candidate, setCandidate] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch('http://localhost:5000/vote', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ candidate }),\r\n      });\r\n      const data = await response.json();\r\n      console.log(data);\r\n      alert('Your vote has been registered successfully!');\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel>Vote for</InputLabel>\r\n        <Select value={candidate} onChange={(e) => setCandidate(e.target.value)}>\r\n          <MenuItem value=\"\">\r\n            <em>Select candidate</em>\r\n          </MenuItem>\r\n          <MenuItem value=\"John\">John</MenuItem>\r\n          <MenuItem value=\"Mary\">Mary</MenuItem>\r\n          <MenuItem value=\"Susan\">Susan</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <Button type=\"submit\" variant=\"contained\" color=\"primary\" className={classes.button}>\r\n        Submit\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default VoteForm;\r\n"]},"metadata":{},"sourceType":"module"}