{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maram\\\\eventsp-main\\\\client\\\\src\\\\textbooksearch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TextbookSearch = () => {\n  _s();\n\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleSearch = async () => {\n    try {\n      const response = await axios.get(`/search/${searchQuery}`);\n      setSearchResults(response.data);\n      setErrorMessage('');\n    } catch (error) {\n      setErrorMessage('An error occurred while searching for textbooks.');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Textbook Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search for textbooks\",\n      value: searchQuery,\n      onChange: e => setSearchQuery(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: searchResults.map((textbook, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: textbook.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Author: \", textbook.author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"ISBN: \", textbook.isbn]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), textbook.available ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Location: \", textbook.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Available at: \", textbook.bookstore]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TextbookSearch, \"sl38/VkOs2VYejdnp9DRo+AsOJo=\");\n\n_c = TextbookSearch;\nexport default TextbookSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextbookSearch\");","map":{"version":3,"sources":["C:/Users/maram/eventsp-main/client/src/textbooksearch.js"],"names":["React","useState","axios","TextbookSearch","searchQuery","setSearchQuery","searchResults","setSearchResults","errorMessage","setErrorMessage","handleSearch","response","get","data","error","e","target","value","map","textbook","index","title","author","isbn","available","location","bookstore"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACK,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMS,YAAY,GAAG,YAAY;AAC/B,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAW,WAAUR,WAAY,EAAjC,CAAvB;AACAG,MAAAA,gBAAgB,CAACI,QAAQ,CAACE,IAAV,CAAhB;AACAJ,MAAAA,eAAe,CAAC,EAAD,CAAf;AACD,KAJD,CAIE,OAAOK,KAAP,EAAc;AACdL,MAAAA,eAAe,CAAC,kDAAD,CAAf;AACD;AACF,GARD;;AAUA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,sBAFd;AAGE,MAAA,KAAK,EAAEL,WAHT;AAIE,MAAA,QAAQ,EAAGW,CAAD,IAAOV,cAAc,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV;AAJjC;AAAA;AAAA;AAAA;AAAA,YAFF,eAQE;AAAQ,MAAA,OAAO,EAAEP,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,EAUGF,YAAY,iBAAI;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAVnB,eAYE;AAAA,gBACGF,aAAa,CAACY,GAAd,CAAkB,CAACC,QAAD,EAAWC,KAAX,kBACjB;AAAA,gCACE;AAAA,oBAAKD,QAAQ,CAACE;AAAd;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,iCAAYF,QAAQ,CAACG,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,+BAAUH,QAAQ,CAACI,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,EAIGJ,QAAQ,CAACK,SAAT,gBACC;AAAA,mCAAcL,QAAQ,CAACM,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,gBAGC;AAAA,uCAAkBN,QAAQ,CAACO,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA,SAAUN,KAAV;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CA5CD;;GAAMjB,c;;KAAAA,c;AA8CN,eAAeA,cAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst TextbookSearch = () => {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const handleSearch = async () => {\r\n    try {\r\n      const response = await axios.get(`/search/${searchQuery}`);\r\n      setSearchResults(response.data);\r\n      setErrorMessage('');\r\n    } catch (error) {\r\n      setErrorMessage('An error occurred while searching for textbooks.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Textbook Search</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search for textbooks\"\r\n        value={searchQuery}\r\n        onChange={(e) => setSearchQuery(e.target.value)}\r\n      />\r\n      <button onClick={handleSearch}>Search</button>\r\n      \r\n      {errorMessage && <p>{errorMessage}</p>}\r\n      \r\n      <div>\r\n        {searchResults.map((textbook, index) => (\r\n          <div key={index}>\r\n            <h3>{textbook.title}</h3>\r\n            <p>Author: {textbook.author}</p>\r\n            <p>ISBN: {textbook.isbn}</p>\r\n            {textbook.available ? (\r\n              <p>Location: {textbook.location}</p>\r\n            ) : (\r\n              <p>Available at: {textbook.bookstore}</p>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextbookSearch;\r\n"]},"metadata":{},"sourceType":"module"}